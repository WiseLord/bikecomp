$(start_block_header)
/*******************************************************************************
* generated by lcd-image-converter rev.$(app_rev) from $(app_date)
* $(doc_data_type)
* filename: $(doc_filename)
* name: $(doc_name)
*
* preset name: $(out_preset_name)
* data block size: $(img_data_block_size) bit(s), uint$(img_data_block_size)_t
* RLE compression enabled: $(img_rle)
* conversion type: $(pre_conv_type), $(pre_mono_type) $(pre_mono_edge)
* split to rows: $(img_split_to_rows)
* bits per pixel: $(out_bpp)
*
* preprocess:
*  main scan direction: $(pre_scan_main)
*  line scan direction: $(pre_scan_sub)
*  inverse: $(pre_inverse)
*******************************************************************************/

/*
typedef struct {
    const __flash uint8_t *data;
    uint16_t width;
    uint16_t height;
    uint16_t size;
    uint8_t rle;
} tImage;
*/

#define no  0x00
#define yes 0x01

#include <stdint.h>

$(end_block_header)

$(start_block_images_table)
#if (0x0$(out_char_code_sim) == 0x0)
static const __flash uint$(img_data_block_size)_t image_data_$(doc_name_ws)_0x$(out_char_code)[$(out_blocks_count)] = {
    $(out_image_preview)
    $(out_image_data)
};
static const __flash tImage $(doc_name_ws)_0x$(out_char_code) = { image_data_$(doc_name_ws)_0x$(out_char_code), $(out_image_width), $(out_image_height), $(out_blocks_count), $(rle)};
#endif
$(end_block_images_table)
